user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
  worker_connections  1024;
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  # To get flag if user agent should be ignored (not logged)
  map $http_user_agent $log_ua {
    ~Pingdom 0;
    ~ELB 0;
    ~Googlebot 0;
    ~Baiduspider 0;

    default 1;
  }

  map $http_x_forwarded_proto $real_scheme {
    default $http_x_forwarded_proto;
    ''      $scheme;
  }

  # Hide nginx version information.
  server_tokens off;

  # As nginx is behind AWS ELB and is not directly accessible, trust anyone
  set_real_ip_from 0.0.0.0/0;
  real_ip_header    X-Forwarded-For;
  real_ip_recursive on;

  access_log  /var/log/nginx/access.log combined if=$log_ua;

  sendfile        on;
  tcp_nopush      on;
  tcp_nodelay     on;

  keepalive_timeout     65;

  gzip  on;
  gzip_disable "msie6";
  gzip_types
    text/javascript
    application/json
    application/javascript
    application/x-javascript
    text/cache-manifest
    text/plain
    text/css;

  server {
    listen       80;
    server_name  localhost;

    root   /usr/share/nginx/html;
    index  index.html;

    location / {
      if ($http_x_forwarded_proto = "http") {
        rewrite ^ https://$host$request_uri? permanent;
      }

      try_files $uri $uri/ @rewrites;
    }

    location = /index.html {
      add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
      expires off;
      etag off;
    }

    location @rewrites {
      rewrite ^(.+)$ /index.html last;
    }

    location = /favicon.ico {
      access_log     off;
      log_not_found  off;
    }

    # Media: images, icons, video, audio, HTC
    location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
      expires 1M;
      add_header 'Cache-Control' 'public, no-transform';
    }

    # CSS and Javascript
    location ~* \.(?:css|js)$ {
      expires 2M;
      add_header 'Cache-Control' 'public, no-transform';
    }

    location /ping {
      access_log    off;
      default_type  text/plain;
      return 200 'Ping';
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
      expires off;
      etag off;

      root   /usr/share/nginx/html;
    }
  }
}